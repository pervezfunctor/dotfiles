source $DOT_DIR/utils

export LANG=en_US.UTF-8

export HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK=1

source_if_exists "$HOME/.cargo/env"

export DOTNET_ROOT="$HOME/.dotnet"
export GOPATH="$HOME/go"

if has_cmd /opt/homebrew/bin/brew; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ -d /home/linuxbrew/.linuxbrew ]]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

spath_export "/usr/bin"
spath_export "/snap/bin"
spath_export "$GOPATH/bin"
spath_export "$XDG_CONFIG_HOME/emacs/bin"
spath_export "$HOME/.local/bin"
spath_export "$HOME/.local/share/pypoetry"
spath_export "$XDG_CONFIG_HOME/Code/User/globalStorage/ms-vscode-remote.remote-containers/cli-bin"
spath_export "$HOME/.console-ninja/.bin"

if [[ -d "$HOME/.pyenv" ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    spath_export "$PYENV_ROOT/bin"
    eval "$(pyenv init -)"
elif has_cmd /$HOME/miniconda3/bin/conda; then
  __conda_setup="$('/$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
          . "/$HOME/miniconda3/etc/profile.d/conda.sh"
      else
          export PATH="/$HOME/miniconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
fi

if [[ -d "$HOME/.local/share/pnpm" ]]; then
    # pnpm
    export PNPM_HOME="$HOME/.local/share/pnpm"
    export PATH="$PNPM_HOME:$PATH"
    # pnpm end

    # tabtab source for packages
    # uninstall by removing these lines
    [[ -f $XDG_CONFIG_HOME/tabtab/zsh/__tabtab.zsh ]] && . $XDG_CONFIG_HOME/tabtab/zsh/__tabtab.zsh || true

fi

function safe_push() {
    git stash -u && git push "$@" && git stash pop
}

# webi paths etc
[ -s "$XDG_CONFIG_HOME/envman/load.sh" ] && source "$XDG_CONFIG_HOME/envman/load.sh"

one_shell_tmux() {
    local tmux_session="default"

    [[ -n "$TMUX" || -n "$EMACS" || -n "$INSIDE_EMACS" || -n "$VIM" || -n "$VSCODE_RESOLVING_ENVIRONMENT" || "$TERM_PROGRAM" == "vscode" ]] && return

    tmux start-server

    # Check and create session if not exists
    if ! tmux has-session -t "$tmux_session" 2>/dev/null; then
        tmux new-session -d -s "$tmux_session"
    fi

    exec tmux attach-session -t "$tmux_session"
}

# has_cmd fzf && {
#     export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border --prompt="> "'
#     export FZF_CTRL_T_COMMAND="fd --type f --hidden --follow --exclude .git"
#     export FZF_ALT_C_COMMAND="fd --type d --hidden --follow --exclude .git"
#     export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git"
# }

source_if_exists "$DOT_DIR/stow/.local/share/aliases"

