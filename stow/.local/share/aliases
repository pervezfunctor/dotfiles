#! /usr/bin/env bash

if is_linux; then
    alias upgrade="sudo apt-get update && sudo apt-get upgrade -y"
    alias open="xdg-open"

    pbcopy() {
        if [ "$XDG_SESSION_TYPE" = "wayland" ] ; then
            wl-copy --foreground
        else
            xsel --clipboard --input
        fi
    }

    pbpaste() {
        if [ "$XDG_SESSION_TYPE" = "wayland" ] ; then
            wl-paste --no-newline
        else
            xsel --clipboard --output
        fi
    }
fi

if is_ubuntu; then
    alias trash=trash-put
    alias bat=batcat
fi

if is_mac; then
    alias upgrade="brew update && brew upgrade"
fi
alias ec="emacsclient -c -n"

alias en="emacs -nw"
alias et="emacsclient -t"

alias xen="TERM=xterm-256color emacs -nw"
alias xet="TERM=xterm-256color emacsclient -t"

alias ten= "TERM=xterm-24bits emacs -nw"
alias tet="TERM=xterm-24bits emacsclient -t"

alias emacs-kill="seartipy_kill_emacs"

alias m="mkdir -p"

# alias a='fasd -a'        # any
# alias s='fasd -si'       # show / search / select
# alias d='fasd -d'        # directory
# alias f='fasd -f'        # file
# alias sd='fasd -sid'     # interactive directory selection
# alias sf='fasd -sif'     # interactive file selection
# alias z='fasd_cd -d'     # cd, same functionality as j in autojump
# alias zz='fasd_cd -d -i' # cd with interactive selection
# alias c="fasd -d -e code"

alias c.="code ."

alias git-unstage="git reset HEAD"
alias git-discard="git checkout --"
alias gst="git status"
alias gsu="git status -u"
alias tsgfm="git stash && ((git pull --rebase || git pull); git stash pop)"

alias gun="git-unstage"
alias gur="git-discard"
alias gcm="git commit -m"
alias gcne="git commit --no-edit"
alias gca="git commit --amend"
alias gcan="git commit --amend --no-edit"

alias g='git'
alias gst="git status"
alias gsu="git status -u"
alias gcan="git commit --amend --no-edit"
alias gsa='git stash apply'
alias gfm='git pull'
alias gp='git push'
alias gcm='git commit --message'
alias gia='git add'
alias gl='git log --topo-order --pretty=format:"$_git_log_medium_format"'
alias gco='git checkout'
alias gb='git branch'
alias gbc='git checkout -b'
alias gbc='git checkout -b'
alias gsl='git stash list'

alias n='pnpm'
alias ni='pnpm install'
alias ne='pnpm exec'
alias nd='pnpm dev'
alias nt='pnpm types'
alias nc='pnpm ci'
alias ntt='pnpm test'
alias Gcm="git commit --no-verify -m"
alias Gp="gp --no-verify"
alias Gcan="gcan --no-verify"

alias jf="code ~/programs/web/devfractal" # use j maybe?
alias jd="code ~/.seartpy" # use j maybe?

if is_ubuntu; then
    alias si="sudo apt-get install -y"
    alias ss="apt-cache search"
    alias sr="sudo apt-get purge"
fi

if is_mac; then
    alias si="brew install -q"
    alias ss="brew search"
    alias sr="brew uninstall"
fi

alias g='git'
alias gs="git stash -u"
alias gst="git status"
alias gsu="git status -u"
alias gcan="git commit --amend --no-edit"
alias gsa='git stash apply'
alias gfm='git pull'
alias gp='git push'
alias gcm='git commit --message'
alias gia='git add'
alias gl='git log --topo-order --pretty=format:"$_git_log_medium_format"'
alias gco='git checkout'
alias gb='git branch'
alias gbc='git checkout -b'
alias gbc='git checkout -b'
alias gsl='git stash list'
alias gpp=safe_push "$@"
alias clone='gh repo clone'
alias glog="git log --graph --topo-order --pretty='%w(100,0,6)%C(yellow)%h%C(bold)%C(black)%d %C(cyan)%ar %C(green)%an%n%C(bold)%C(white)%s %N' --abbrev-commit"

alias nm="nmap -sC -sV -oN"

alias v="nvim"
alias c="code"
alias t="tmux"

alias d="docker"
alias dco="docker compose"
alias dps="docker ps"
alias dpa="docker ps -a"
alias dl="docker ps -l -q"
alias dx="docker exec -it"
alias dlogs="docker logs -f"
alias lzg='lazygit'
alias lzd='lazydocker'

alias la=tree


if has_cmd code; then
    alias c='code'
    alias c.='code .'
fi

alias l='ls -1A'         # Lists in one column, hidden files.
alias ll='ls -lh'        # Lists human readable sizes.
alias lr='ll -R'         # Lists human readable sizes, recursively.
alias la='ll -A'         # Lists human readable sizes, hidden files.
alias lm='la | "$PAGER"' # Lists human readable sizes, hidden files through pager.
alias lk='ll -Sr'        # Lists sorted by size, largest last.
alias lt='ll -tr'        # Lists sorted by date, most recent last.
alias lc='lt -c'         # Lists sorted by date, most recent last, shows change time.
alias lu='lt -u'         # Lists sorted by date, most recent last, shows access time.
alias sl='ls'            # Correction for common spelling error.

alias md="mkdir -p"
alias rd="rmdir"

alias ipa="ip -brief a"
has_cmd batcat && alias cat="batcat"

has_cmd gdu || has_cmd gdu-go && alias gdu="gdu-go"

alias ..="../"
alias ...="../../"
alias ....="../../../"
alias .....="../../../../"
alias ......="../../../../../"

if has_cmd flatpak; then
    has_cmd wezterm || alias wezterm="flatpak run org.wezfurlong.wezterm"
    has_cmd telegram || alias telegram="flatpak run org.telegram.desktop"
    has_cmd clion || alias clion="flatpak run com.jetbrains.CLion"
    has_cmd chrome || alias chrome="flatpak run com.google.Chrome"
    has_cmd deluge || alias deluge="flatpak run org.deluge_torrent.deluge"
    has_cmd zoom || alias zoom="flatpak run us.zoom.Zoom"
    has_cmd shiftey || alias shiftey="flatpak run io.github.shiftey.Desktop"
    has_cmd code || alias code="flatpak run com.visualstudio.code"
    # has_cmd code || alias code="flatpak run com.visualstudio.code --password-store="gnome-libsecret""
    has_cmd nvim || alias nvim="flatpak run io.neovim.nvim"
    has_cmd emacs|| alias emacs="flatpak run org.gnu.emacs"
    has_cmd boxbuddy || alias boxbuddy="flatpak run io.github.dvlv.boxbuddyrs"
fi

alias cpr="cp -r"
alias md="mkdir -p"
alias rd="rmdir"
alias del="trash"

if [[ -d "$HOME/.local/share/pnpm" ]]; then
    alias n='pnpm'
    alias ni='pnpm install'
    alias nid='pnpm install -D'
    alias nb='pnpm build'
    alias nl='pnpm lint:dev'
    alias ne='pnpm exec'
    alias nd='pnpm dev'
    alias nc='pnpm ci'
    alias nt='pnpm types:dev'
    alias ntc='pnpm types'
    alias ntt='pnpm test:dev'
    alias nttc='pnpm test:dev'
    alias nci='pnpm types && pnpm lint'
    alias ndb='pnpm db'
    alias ndbt='pnpm db:types'
    alias ndbp='pnpm db:push'
    alias ndbs='pnpm db:seed'
    alias ndbst='pnpm db:studio'
    alias ndbr='pnpm db:repl'
fi

# Eza
if has_cmd eza; then
    alias l="eza -l --icons --git -a"
    alias lt="eza --tree --level=2 --long --icons --git"
    alias ltree="eza --tree --level=2  --icons --git"
fi

alias lv="NVIM_APPNAME=lazyvim nvim"

alias ls='eza -lh --group-directories-first --icons'
alias lsa='ls -a'
alias lt='eza --tree --level=2 --long --icons --git'
alias lta='lt -a'
alias ff="fzf --preview 'bat --style=numbers --color=always {}'"
alias fv="fzf --bind 'enter:become(vim {})'"

# alias fd='fdfind'

# cx() { cd "$@" && l; }
# fcd() { cd "$(find . -type d -not -path '*/.*' | fzf)" && l; }
# f() { echo "$(find . -type f -not -path '*/.*' | fzf)" | pbcopy }
# fv() { nvim "$(find . -type f -not -path '*/.*' | fzf)" }
