source $XDG_CONFIG_HOME/dotfiles/scripts/utils

export LANG=en_US.UTF-8

alias g='git'
alias gs="git stash -u"
alias gst="git status"
alias gsu="git status -u"
alias gcan="git commit --amend --no-edit"
alias gsa='git stash apply'
alias gfm='git pull'
alias gp='git push'
alias gcm='git commit --message'
alias gia='git add'
alias gl='git log --topo-order --pretty=format:"$_git_log_medium_format"'
alias gco='git checkout'
alias gb='git branch'
alias gbc='git checkout -b'
alias gbc='git checkout -b'
alias gsl='git stash list'
alias gpp=safe_push "$@"
alias clone='gh repo clone'
alias glog="git log --graph --topo-order --pretty='%w(100,0,6)%C(yellow)%h%C(bold)%C(black)%d %C(cyan)%ar %C(green)%an%n%C(bold)%C(white)%s %N' --abbrev-commit"

alias nm="nmap -sC -sV -oN"

alias v="nvim"
alias c="code"
alias t="tmux"

alias d="docker"
alias dco="docker compose"
alias dps="docker ps"
alias dpa="docker ps -a"
alias dl="docker ps -l -q"
alias dx="docker exec -it"
alias dlogs="docker logs -f"

alias la=tree


if has_cmd code; then
    alias c='code'
    alias c.='code .'
fi

alias l='ls -1A'         # Lists in one column, hidden files.
alias ll='ls -lh'        # Lists human readable sizes.
alias lr='ll -R'         # Lists human readable sizes, recursively.
alias la='ll -A'         # Lists human readable sizes, hidden files.
alias lm='la | "$PAGER"' # Lists human readable sizes, hidden files through pager.
alias lk='ll -Sr'        # Lists sorted by size, largest last.
alias lt='ll -tr'        # Lists sorted by date, most recent last.
alias lc='lt -c'         # Lists sorted by date, most recent last, shows change time.
alias lu='lt -u'         # Lists sorted by date, most recent last, shows access time.
alias sl='ls'            # Correction for common spelling error.

alias md="mkdir -p"
alias rd="rmdir"

alias ipa="ip -brief a"
has_cmd batcat && alias cat="batcat"

has_cmd gdu || has_cmd gdu-go && alias gdu="gdu-go"

alias ..="../"
alias ...="../../"
alias ....="../../../"
alias .....="../../../../"
alias ......="../../../../../"

if has_cmd flatpak; then
    has_cmd wezterm || alias wezterm="flatpak run org.wezfurlong.wezterm"
    has_cmd telegram || alias telegram="flatpak run org.telegram.desktop"
    has_cmd clion || alias clion="flatpak run com.jetbrains.CLion"
    has_cmd chrome || alias chrome="flatpak run com.google.Chrome"
    has_cmd deluge || alias deluge="flatpak run org.deluge_torrent.deluge"
    has_cmd zoom || alias zoom="flatpak run us.zoom.Zoom"
    has_cmd shiftey || alias shiftey="flatpak run io.github.shiftey.Desktop"
    has_cmd code || alias code="flatpak run com.visualstudio.code"
    # has_cmd code || alias code="flatpak run com.visualstudio.code --password-store="gnome-libsecret""
    has_cmd nvim || alias nvim="flatpak run io.neovim.nvim"
    has_cmd emacs|| alias emacs="flatpak run org.gnu.emacs"
    has_cmd boxbuddy || alias boxbuddy="flatpak run io.github.dvlv.boxbuddyrs"
fi

source_if_exists "$HOME/.cargo/env"

export DOTNET_ROOT="$HOME/.dotnet"
export GOPATH="$HOME/go"

if has_cmd /opt/homebrew/bin/brew; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ -d /home/linuxbrew/.linuxbrew ]]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

spath_export "/usr/bin"
spath_export "/snap/bin"
spath_export "$GOPATH/bin"
spath_export "$HOME/.config/dotfiles/bin"
spath_export "$HOME/.config/emacs/bin"
spath_export "$HOME/.local/bin"
spath_export "$HOME/.local/share/pypoetry"
spath_export "$HOME/.config/Code/User/globalStorage/ms-vscode-remote.remote-containers/cli-bin"
spath_export "$HOME/.console-ninja/.bin"

# if is_mac; then
#     export DOCKER_HOST='unix://$HOME/.local/share/containers/podman/machine/qemu/podman.sock'
# else
#     # export DOCKER_HOST=unix:///run/user/1000/docker.sock
# fi

if [[ -d "$HOME/.pyenv" ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    spath_export "$PYENV_ROOT/bin"
    eval "$(pyenv init -)"
    # eval "$(pyenv virtualenv-init -)"
elif has_cmd /$HOME/miniconda3/bin/conda; then
  __conda_setup="$('/$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
          . "/$HOME/miniconda3/etc/profile.d/conda.sh"
      else
          export PATH="/$HOME/miniconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
fi


# take parameters from the command line and pass it to git push
function safe_push() {
    git stash -u && git push "$@" && git stash pop
}

# webi paths etc
[ -s "$HOME/.config/envman/load.sh" ] && source "$HOME/.config/envman/load.sh"

# has_cmd fzf && {
#     export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border --prompt="> "'
#     export FZF_CTRL_T_COMMAND="fd --type f --hidden --follow --exclude .git"
#     export FZF_ALT_C_COMMAND="fd --type d --hidden --follow --exclude .git"
#     export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git"
# }

if [[ -d "$HOME/.local/share/pnpm" ]]; then
    # pnpm
    export PNPM_HOME="$HOME/.local/share/pnpm"
    export PATH="$PNPM_HOME:$PATH"
    # pnpm end

    # tabtab source for packages
    # uninstall by removing these lines
    [[ -f $XDG_CONFIG_HOME/tabtab/zsh/__tabtab.zsh ]] && . $XDG_CONFIG_HOME/tabtab/zsh/__tabtab.zsh || true

fi

source_if_exists "$HOME/.config/dotfiles/aliases"
