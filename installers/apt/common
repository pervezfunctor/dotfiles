#! /usr/bin/env bash

{

si() {
    for p in "$@"; do
      slog "Installing package $p"
      sudo apt-get -y install "$p"
    done
}

update_packages() {
    slog "Updating"

    if ! { sudo apt-get update && sudo apt-get upgrade -y; }; then
      err_exit "apt-get update/upgrade failed, quitting"
    fi
}

core_install() {
    si software-properties-common apt-transport-https ca-certificates
    si curl wget git trash-cli tar tree nala micro
    si zsh zsh-syntax-highlighting zsh-autosuggestions
    si build-essential unzip unar p7zip zip gawk gh
}

sys_python_install() {
    si python3 python3-pip python-is-python3 python3-venv pipx
    # python3 -m pip install --user --upgrade pip setuptools
}

essential_install() {
    update_packages

    slog "Installing essential packages"

    core_install

    si tmux pkg-config urlview fasd
    si shellcheck git-extras xclip xsel

    sys_python_install

    si sd lsd gdu bat hyperfine fd-find fzf ripgrep zoxide

    slog "Essential packages installation done!"
}

flathub_install() {
    si flatpak
    flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo --user
}

cpp_install() {
    slog "Installing C++"

    si gcc gdb g++ libboost-all-dev catch2
    si clang llvm clang-tidy clang-format clang-tools libclang-dev
    si doxygen graphviz ccache cppcheck pre-commit
    si valgrind systemtap ltrace strace lldb lld

    cmake_install
    conan_install

    slog "C++ installation done!"
}

vscode_install() {
    has_cmd code && return 0

    wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
    sudo apt-get update
    si code
}

apps_install() {
    si chromium-browser virt-manager
    flatpak_apps_install
}

snap_install() {
    has_cmd snap && return 0

    slog "Installing snap..."
    si snapd
    slog "snap installation done!"
}

docker_install() {
    has_cmd docker && return 0

    slog "Installing docker..."

    srm /tmp/get-docker.sh
    curl -fsSL https://get.docker.com -o /tmp/get-docker.sh
    sudo sh /tmp/get-docker.sh
    srm /tmp/get-docker.sh


    docker_common_install

    slog "Docker installation done!"
}

cockpit_install() {
    has_cmd cockpit && return 1

    slog "Installing cockpit"

    si cockpit cockpit-machines cockpit-sosreport cockpit-pcp cockpit-podman cockpit-storaged
    sudo systemctl enable --now cockpit.socket

    slog "cockpit installation done!"
}

podman_install() {
    si podman podman-toolbox
}

libvirt_install() {
    si buildah libvirt-daemon distrobox

    sudo systemctl enable --now libvirtd
}

ct_install() {
    docker_install
    podman_install
    cockpit_install
}

virt_install() {
    ct_install
    libvirt_install
    code_server_install
}

}
