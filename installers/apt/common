#! /usr/bin/env bash

{

apti() {
  for p in "$@"; do
    slog "Installing package $p"
    sudo apt-get -y install "$p"
  done
}

update_packages() {
  slog "Updating"

  if ! { sudo apt-get update && sudo apt-get upgrade -y; }; then
    err_exit "apt-get update/upgrade failed, quitting"
  fi

}

core_install() {
  apti software-properties-common apt-transport-https ca-certificates
  apti curl wget git trash-cli tree nala micro
  apti zsh zsh-syntax-highlighting zsh-autosuggestions
  apti build-essential unzip unar p7zip zip gawk gh
}

sys_python_install() {
  apti python3 python3-pip python-is-python3 python3-venv
  # python3 -m pip install --user --upgrade pip setuptools
}

essential_install() {
  update_packages

  slog "Installing essential packages"

  core_install

  apti tmux libzmq3-dev pkg-config urlview fasd
  apti shellcheck git-extras gawk gcc xclip xsel

  sys_python_install

  apti sd lsd gdu bat hyperfine fd-find fzf ripgrep zoxide

  slog "Essential packages installation done!"
}

flathub_install() {
  apti flatpak
  flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo --user
}

cpp_install() {
    slog "Installing C++"

    apti gcc gdb g++ libboost-all-dev catch2
    apti clang llvm clang-tidy clang-format clang-tools libclang-dev
    apti doxygen graphviz ccache cppcheck pre-commit
    apti valgrind systemtap ltrace strace lldb lld

    cmake_install
    conan_install

    slog "C++ installation done!"
}

vscode_install() {
    has_cmd code && return 0

    wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
    sudo apt-get update
    apti code
}

apps_install() {
    apti chromium-browser virt-manager
    flatpak_apps_install
}

snap_install() {
    has_cmd snap && return 0

    slog "Installing snap..."
    apti snapd
    slog "snap installation done!"
}

docker_install() {
  has_cmd docker && return 0

  slog "Installing docker..."

  srm /tmp/get-docker.sh
  curl -fsSL https://get.docker.com -o /tmp/get-docker.sh
  sudo sh /tmp/get-docker.sh
  srm /tmp/get-docker.sh


  docker_common_install

  slog "Docker installation done!"
}

cockpit_install() {
    has_cmd cockpit && return 1

    slog "Installing cockpit"

    apti cockpit cockpit-machines cockpit-sosreport cockpit-pcp cockpit-podman cockpit-storaged
    sudo systemctl enable --now cockpit.socket

    slog "cockpit installation done!"
}

podman_install() {
  apti podman podman-toolbox
}

libvirt_install() {
    apti buildah libvirt-daemon distrobox

    sudo systemctl enable --now libvirtd
}

ct_install() {
    docker_install
    podman_install
    cockpit_install
}

virt_install() {
    ct_install
    libvirt_install
    code_server_install
}

}
