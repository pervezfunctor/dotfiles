#!/usr/bin/env bash

# shellcheck disable=SC1090
source <(curl -sSL https://is.gd/anumof)

INSTALL_OPTIONS=("shell-slim" "shell" "vscode" "web" "python" "apps" "fonts" "vm" "ptyxis" "incus" "docker" "nix" "cpp" "mise" "rust" "brew" "fonts" "doom" "go" "code_server" "devbox" "pixi" "tailscale" "@nix" "@shell" "@vm" "@hyprland" "@sway")

DEFAULT_OPTIONS=("shell-slim" "vscode" "fonts" "fonts")

help() {
    echo "Usage: $0 [OPTION1] [OPTION2] ..."
    echo "Options:"
    echo "  shell-slim   essential shell packages."
    echo "  shell        shell tools like zsh, tmux, nvim."
    echo "  vscode       vscode and extensions."
    echo "  vm           vm tools like buildah, distrobox, libvirt."
    echo "  web          pnpm based web dev tools."
    echo "  python       python dev tools."
    echo "  nix          nix installation"
    echo "  fonts        nerd fonts for jetbrains mono, cascadia code mono."
    echo "  apps         flatpak apps like firefox, chromium, zoom, obsidian, wezterm."
    echo "  incus        incus and lxc."
    echo "  ptyxis       ptyxis terminal."
    echo "  cpp          gcc, clang, cmake, boost."
    echo "  docker       docker only"
    echo "  brew         homebrew for macos and linuxbrew for linux."
    echo "  mise         mise for managing tools like rust, go, python, etc."
    echo "  rust         rust dev tools."
    echo "  go           go dev tools."
    echo "  devbox       devbox for managing dev containers."
    echo "  pixi         pixi for managing global packages and modern conda for python."
    echo "  tailscale    tailscale for managing vpn."
    echo "  code-server  code-server for managing vscode in browser."
    echo "  help         show this help."
    echo ""
    echo "Group Options"
    echo "  @nix         nix installation"
    echo "  @shell       min and shell tools and config for zsh, tmux, neovim."
    echo "  @vm          vm tools like buildah, libvirt."
    echo "  @hyprland    hyprland desktop on fedora and tumbleweed."
    echo "  @sway        sway desktop on fedora and tumbleweed."
    echo "  help        show this help."
    echo ""
}

main() {
    if ! [[ "$#" -eq 0 ]]; then
        common-installer "$@"
        return 0
    fi

    if ! has_cmd gum; then
        help
        exit 0
    fi

    local SELECTED_OPTIONS
    SELECTED_OPTIONS=$(igum choose "${INSTALL_OPTIONS[@]}" --no-limit --selected "${DEFAULT_OPTIONS[@]}" --header "Choose options to install" | tr '\n' ' ')

    if [[ -n "$SELECTED_OPTIONS" ]]; then
        echo ""
        slog "Selected: ${SELECTED_OPTIONS}. Installing..."
        echo ""
        common-installer "$SELECTED_OPTIONS"
        slog "Installation complete."
    else
        slog "No options selected."
        return 1
    fi
}

if [[ "$1" == "help" ]]; then
    help
else
    if [[ "$1" == "generic" ]] || [[ "$1" == "generic-ct" ]] || [[ "$1" == "fedora-atomic" ]] || is_multipass || is_distrobox; then
        export NOSUDO=1
    fi

    CLICOLOR_FORCE=1 bootstrap "$@"
fi
