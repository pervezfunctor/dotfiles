#!/bin/bash

set -euo pipefail

# shellcheck disable=SC1091
source "$(dirname "$0")/vm-utils"

VM_EASY_DISTRO_LIST=("ubuntu" "fedora" "arch" "debian")

create_all() {
  slog "Creating 4 libvirt VMs (Ubuntu, Fedora, Arch, Debian)..."

  for distro in "${VM_EASY_DISTRO_LIST[@]}"; do
    if vm_exists "${distro}-easy"; then
      slog "$distro VM already exists, skipping..."
    else
      slog "Creating $distro VM: $distro-easy"
      vm-easy --distro "$distro" --name "${distro}-easy"
    fi
  done

  success "All VMs created successfully!"
  slog "You can access them using: virsh console <vm-name>"
}

usage() {
  cat <<EOF
Usage: $(basename "$0") [OPTION]

Manage all VMs created by vm-create.

Options:
  delete  Delete all VMs created by vm-create
  start   Start all VMs created by vm-create
  stop    Stop all VMs created by vm-create
  restart Restart all VMs created by vm-create
  --help        Display this help message
EOF
}

delete_all() {
  slog "Deleting all VMs..."
  for vm in "${VM_EASY_DISTRO_LIST[@]}"; do
    if vm_exists "${vm}-easy"; then
      slog "Deleting VM: ${vm}-easy"
      vm delete "${vm}-easy"
    fi
  done
  success "All VMs deleted successfully!"
}

start_all() {
  slog "Starting all VMs..."
  for vm in "${VM_EASY_DISTRO_LIST[@]}"; do
    if vm_exists "${vm}-easy"; then
      slog "Starting VM: ${vm}-easy"
      vm start "${vm}-easy"
    fi
  done
  success "All VMs started successfully!"
}

stop_all() {
  slog "Stopping all VMs..."
  for vm in "${VM_EASY_DISTRO_LIST[@]}"; do
    if vm_exists "${vm}-easy"; then
      slog "Stopping VM: ${vm}-easy"
      vm stop "${vm}-easy"
    fi
  done
  success "All VMs stopped successfully!"
}

restart_all() {
  slog "Restarting all VMs..."
  for vm in "${VM_EASY_DISTRO_LIST[@]}"; do
    if vm_exists "${vm}-easy"; then
      slog "Restarting VM: ${vm}-easy"
      vm restart "${vm}-easy"
    fi
  done
  success "All VMs restarted successfully!"
}

usage() {
  cat <<EOF
Usage: $(basename "$0") [OPTION]

Manage VMs created by vm-easy.

Options:
  create       # Create all VMs (default if no option)
  delete       # Delete all VMs
  start        # Start all VMs
  stop         # Stop all VMs
  restart      # Restart all VMs
  --help       # Display this help message
EOF
}

main() {
  check_libvirt

  if [[ $# -eq 0 ]]; then
    create_all "$@"
    exit 0
  fi

  if [[ "$1" == "delete" ]]; then
    delete_all
  elif [[ "$1" == "start" ]]; then
    start_all
  elif [[ "$1" == "stop" ]]; then
    stop_all
  elif [[ "$1" == "restart" ]]; then
    restart_all
  elif [[ "$1" == "--help" || "$1" == "help" || "$1" == "help" ]]; then
    usage
    exit 0
  else
    slog "Invalid option: $1"
    slog "Use --help for usage information."
    usage
    exit 1
  fi
}

main "$@"
