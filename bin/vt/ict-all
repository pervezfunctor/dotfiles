#!/bin/bash

set -euo pipefail

# shellcheck disable=SC1091
source "$(dirname "$0")/ict-utils"

ICT_DISTRO_LIST=("debian" "ubuntu" "fedora" "arch" "tumbleweed")

list_all() {
    slog "Listing all Incus LXC containers..."

    for ct in "${ICT_DISTRO_LIST[@]}"; do
        if ict_exists "${ct}-ict"; then
            incus list "${ct}-ict" --format=compact --columns=ns4
            echo
        else
            echo
            slog "Container: ${ct}-ict does not exist"
            echo
        fi
    done

    if ! incus list type=container --format=compact --columns=ns4; then
        fail "Failed to list containers. Ensure Incus is running."
        exit 1
    fi

    slog "You can access them using: ict ssh <container-name>"
}

ICT_DISTRO_LIST=("debian" "ubuntu" "fedora" "arch" "tumbleweed")

create_all() {
    slog "Creating Incus LXC containers (Debian, Ubuntu, Fedora, Arch, Tumbleweed)..."

    for ct in "${ICT_DISTRO_LIST[@]}"; do
        if ! ict_exists "${ct}-ict"; then
            slog "Creating container: ${ct}-ict"
            ict-create --distro "$ct" --name "${ct}-ict"
        fi
    done

    slog "Listing created containers:"
    incus list type=container

    success "All containers created successfully!"
    slog "You can access them using: ict ssh <container-name>"
}

delete_all() {
    slog "Deleting all containers..."
    for ct in "${ICT_DISTRO_LIST[@]}"; do
        if ict_exists "${ct}-ict"; then
            slog "Deleting container: ${ct}-ict"
            ict delete "${ct}-ict"
        fi
    done
    success "All containers deleted successfully!"
}

start_all() {
    slog "Starting all containers..."
    for ct in "${ICT_DISTRO_LIST[@]}"; do
        if ict_exists "${ct}-ict"; then
            slog "Starting container: ${ct}-ict"
            ict start "${ct}-ict"
        fi
    done
    success "All containers started successfully!"
}

stop_all() {
    slog "Stopping all containers..."
    for ct in "${ICT_DISTRO_LIST[@]}"; do
        if ict_exists "${ct}-ict"; then
            slog "Stopping container: ${ct}-ict"
            ict stop "${ct}-ict"
        fi
    done
    success "All containers stopped successfully!"
}

restart_all() {
    slog "Restarting all containers..."
    for ct in "${ICT_DISTRO_LIST[@]}"; do
        if ict_exists "${ct}-ict"; then
            slog "Restarting container: ${ct}-ict"
            ict restart "${ct}-ict"
            sleep 1
        fi
    done
    success "All containers restarted successfully!"
}

usage() {
    cat <<EOF
Usage: $(basename "$0") [OPTION]

Incus LXC containers created by ict-create.

Options:
  delete  Delete all containers created by ict-create
  start   Start all containers created by ict-create
  stop    Stop all containers created by ict-create
  restart Restart all containers created by ict-create
  --help    Display this help message

Examples:
  $(basename "$0")          # Create all containers (default if no option)
  $(basename "$0") delete   # Delete all containers
  $(basename "$0") start    # Start all containers
  $(basename "$0") stop     # Stop all containers
  $(basename "$0") restart  # Restart all containers
  $(basename "$0") --help   # Display help message
EOF
}

main() {
    incus_check

    if [[ $# -eq 0 ]]; then
        create_all
        exit 0
    fi

    if [[ "$1" == "delete" ]]; then
        delete_all
    elif [[ "$1" == "start" ]]; then
        start_all
    elif [[ "$1" == "stop" ]]; then
        stop_all
    elif [[ "$1" == "restart" ]]; then
        restart_all
    elif [[ "$1" == "--help" || "$1" == "help" || "$1" == "help" ]]; then
        usage
        exit 0
    elif [[ $# -eq 0 ]] || [[ "$1" == "create" ]]; then
        create_all
    else
        fail "Unknown option: $1"
        usage
        exit 1
    fi
}

main "$@"
