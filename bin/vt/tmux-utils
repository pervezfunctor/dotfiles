#!/bin/bash

set -euo pipefail

DOT_DIR=${DOT_DIR:-$HOME/.ilm}

# shellcheck disable=SC1091
source "$DOT_DIR/share/utils"

tmux_grid() {
  if ! command -v tmux &>/dev/null; then
    echo "Error: tmux is not installed. Please install it first." >&2
    return 1
  fi

  if [ "$#" -lt 2 ]; then
    echo "Usage: tmux_grid <session-name> <command1> [command2 ...]" >&2
    return 1
  fi

  local session_name="$1"
  shift

  if [ -z "$session_name" ]; then
    echo "Error: Session name cannot be empty." >&2
    return 1
  fi

  if tmux has-session -t "$session_name" 2>/dev/null; then
    echo "Session '$session_name' already exists. Attaching to it..."
    tmux attach-session -t "$session_name"
    return 0
  fi

  local base_index
  base_index=$(tmux show-options -gqv base-index 2>/dev/null)
  base_index=${base_index:-0}

  local pane_base_index
  pane_base_index=$(tmux show-options -gqv pane-base-index 2>/dev/null)
  pane_base_index=${pane_base_index:-0}

  local -a cmds=("$@")
  local num_cmds=${#cmds[@]}

  echo "Creating new tmux session '$session_name' for $num_cmds command(s)..."

  tmux new-session -d -s "$session_name" -n "grid"

  for ((i = 1; i < num_cmds; i++)); do
    tmux split-window -t "$session_name:$base_index"
    tmux select-layout -t "$session_name:$base_index" tiled
  done

  for ((i = 0; i < num_cmds; i++)); do
    local pane_index=$((pane_base_index + i))
    local target_pane="$session_name:$base_index.$pane_index"
    tmux send-keys -t "$target_pane" "${cmds[$i]}" C-m
  done

  tmux set-window-option -t "$session_name:$base_index" synchronize-panes on

  echo "Attaching to session '$session_name'. Panes are synchronized."
  tmux attach-session -t "$session_name"
}

tmux_grid "$@"
