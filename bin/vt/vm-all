#!/bin/bash

set -euo pipefail

# shellcheck disable=SC1091
source "$(dirname "$0")/vm-utils"

create_all() {
    slog "Creating 4 libvirt VMs (Ubuntu, Fedora, Alpine, Debian)..."

    if vm_exists "dev"; then
        slog "Ubuntu VM already exists, skipping..."
    else
        slog "Creating Ubuntu VM: dev"
        vm-create --distro ubuntu --name dev --release noble --docker --brew --dotfiles min
    fi

    if vm_exists "min"; then
        slog "Fedora VM already exists, skipping..."
    else
        slog "Creating Fedora VM: min"
        vm-create --distro fedora --name min --dotfiles min
    fi

    if vm_exists "incus"; then
        slog "Alpine VM already exists, skipping..."
    else
        slog "Creating Alpine VM: incus"
        vm-create --distro alpine --name incus --dotfiles min
    fi

    if vm_exists "nix"; then
        slog "Debian VM already exists, skipping..."
    else
        slog "Creating Debian VM: nix"
        vm-create --distro debian --name nix --nix
    fi

    slog "Listing created VMs:"
    list_vms

    success "All VMs created successfully!"
    slog "You can access them using: virsh console <vm-name>"
}

usage() {
    cat <<EOF
Usage: $(basename "$0") [OPTION]

Manage all VMs created by vm-create.

Options:
  --delete  Delete all VMs created by vm-create
  --start   Start all VMs created by vm-create
  --stop    Stop all VMs created by vm-create
  --restart Restart all VMs created by vm-create
  --help        Display this help message
EOF
}

delete_all() {
    slog "Deleting all VMs..."
    for vm in dev min incus nix; do
        if vm_exists "$vm"; then
            slog "Deleting VM: $vm"
            vm delete "$vm"
        fi
    done
    success "All VMs deleted successfully!"
}

start_all() {
    slog "Starting all VMs..."
    for vm in dev min incus nix; do
        if vm_exists "$vm"; then
            slog "Starting VM: $vm"
            vm start "$vm"
        fi
    done
    success "All VMs started successfully!"
}

stop_all() {
    slog "Stopping all VMs..."
    for vm in dev min incus nix; do
        if vm_exists "$vm"; then
            slog "Stopping VM: $vm"
            vm stop "$vm"
        fi
    done
    success "All VMs stopped successfully!"
}

restart_all() {
    slog "Restarting all VMs..."
    for vm in dev min incus nix; do
        if vm_exists "$vm"; then
            slog "Restarting VM: $vm"
            vm restart "$vm"
        fi
    done
    success "All VMs restarted successfully!"
}

main() {
    check_libvirt

    if [[ $# -eq 0 ]]; then
        create_all "$@"
        exit 0
    fi

    if [[ "$1" == "--delete" ]]; then
        delete_all
    elif [[ "$1" == "--start" ]]; then
        start_all
    elif [[ "$1" == "--stop" ]]; then
        stop_all
    elif [[ "$1" == "--restart" ]]; then
        restart_all
    else
        slog "Invalid option: $1"
        slog "Use --help for usage information."
        usage
        exit 1
    fi
}

main "$@"
