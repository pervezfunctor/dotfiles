#!/bin/bash

# shellcheck disable=SC1091

set -euo pipefail

source "$(dirname "$0")/ivm-utils"

IVM_DISTRO_LIST=("debian" "ubuntu" "fedora" "arch" "tw")

list_all() {
    for vm in "${IVM_DISTRO_LIST[@]}"; do
        if has_vm "${vm}-ivm"; then
            incus list "${vm}-ivm" --format=compact --columns=ns4
        else
            warn "VM: ${vm}-ivm does not exist"
        fi
    done
}

create_all() {
    slog "Creating Incus VMs (Debian, Ubuntu, Fedora, Arch, Tumbleweed)..."

    for distro in "${IVM_DISTRO_LIST[@]}"; do
        if has_vm "${distro}-ivm"; then
            slog "$distro VM already exists, skipping..."
        else
            slog "Creating $distro VM: $distro-ivm"
            ivm-create --distro "$distro" --name "${distro}-ivm"
        fi
    done

    success "All VMs created successfully!"
    slog "You can access them using: incus console <vm-name> <username>"
}

delete_all() {
    slog "Deleting all VMs..."
    for vm in "${IVM_DISTRO_LIST[@]}"; do
        if has_vm "${vm}-ivm"; then
            slog "Deleting VM: ${vm}-ivm"
            ivm delete "${vm}-ivm"
        fi
    done
    success "All VMs deleted successfully!"
}

start_all() {
    slog "Starting all VMs..."
    for vm in "${IVM_DISTRO_LIST[@]}"; do
        if has_vm "${vm}-ivm"; then
            slog "Starting VM: ${vm}-ivm"
            ivm start "${vm}-ivm"
        fi
    done
    success "All VMs started successfully!"
}

stop_all() {
    slog "Stopping all VMs..."
    for vm in "${IVM_DISTRO_LIST[@]}"; do
        if has_vm "${vm}-ivm"; then
            slog "Stopping VM: ${vm}-ivm"
            ivm stop "${vm}-ivm"
        fi
    done
    success "All VMs stopped successfully!"
}

restart_all() {
    slog "Restarting all VMs..."
    for vm in "${IVM_DISTRO_LIST[@]}"; do
        if has_vm "${vm}-ivm"; then
            slog "Restarting VM: ${vm}-ivm"
            ivm restart "${vm}-ivm"
        fi
    done
    success "All VMs restarted successfully!"
}

usage() {
    cat <<EOF
Usage: $(basename "$0") [OPTION]

Incus VMs created by ivm-create.

Options:
  create       # Create all VMs (default if no option)
  delete       # Delete all VMs
  start        # Start all VMs
  stop         # Stop all VMs
  restart      # Restart all VMs
  --help       # Display this help message
EOF
}

main() {
    check_ivm_prerequisites

    if [[ $# -eq 0 ]] || [[ "$1" == "create" ]]; then
        create_all
    elif [[ "$1" == "delete" ]]; then
        delete_all
    elif [[ "$1" == "start" ]]; then
        start_all
    elif [[ "$1" == "stop" ]]; then
        stop_all
    elif [[ "$1" == "restart" ]]; then
        restart_all
    elif [[ "$1" == "--help" || "$1" == "help" || "$1" == "help" ]]; then
        usage
        exit 0
    elif [[ "$1" == "list" ]]; then
        list_all
    else
        fail "Unknown option: $1"
        usage
        exit 1
    fi
}

main "$@"
