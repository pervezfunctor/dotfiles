#!/bin/bash

set -euo pipefail

# shellcheck disable=SC1091
source "$(dirname "$0")/dt-utils"

DT_DISTRO_LIST=("ubuntu" "debian" "arch" "fedora" "alpine" "tw" "nix" "centos" "rocky" "alpine")

dt_exists() {
  distrobox list | grep -q "$1" >/dev/null
}

check_prerequisites() {
  if ! has_cmd distrobox; then
    fail "distrobox is not installed. Please install it first."
    exit 1
  fi

  if ! has_cmd dt; then
    fail "dt is not in PATH."
    exit 1
  fi
}

create_all() {
  slog "Creating Distrobox containers (Ubuntu, Fedora, Arch, Debian, Alpine, Tumbleweed, NixOS)..."

  for d in "${DT_DISTRO_LIST[@]}"; do
    if dt_exists "${d}-dt"; then
      slog "Container for ${d}-dt already exists, skipping..."
    else
      slog "Creating container for ${d}-dt..."
      dt create "$d" "${d}-dt"
    fi
  done

  slog "Listing created containers:"
  dt list

  success "All containers created successfully!"
  slog "You can access them using: dt enter <container-name>"
}

delete_all() {
  slog "Deleting all containers..."
  for ct in "${DT_DISTRO_LIST[@]}"; do
    if dt_exists "$ct-dt"; then
      slog "Deleting container: $ct-dt"
      dt delete "$ct-dt"
    fi
  done
  success "All containers deleted successfully!"
}

start_all() {
  slog "Starting all containers..."
  for ct in "${DT_DISTRO_LIST[@]}"; do
    if dt_exists "$ct-dt"; then
      slog "Starting container: $ct-dt"
      dt start "$ct-dt"
    fi
  done
  success "All containers started successfully!"
}

stop_all() {
  slog "Stopping all containers..."
  for ct in "${DT_DISTRO_LIST[@]}"; do
    if dt_exists "$ct-dt"; then
      slog "Stopping container: $ct-dt"
      dt stop "$ct-dt"
    fi
  done
  success "All containers stopped successfully!"
}

restart_all() {
  slog "Restarting all containers..."
  for ct in "${DT_DISTRO_LIST[@]}"; do
    if dt_exists "$ct-dt"; then
      slog "Restarting container: $ct-dt"
      dt restart "$ct-dt"
      sleep 1
    fi
  done
  success "All containers restarted successfully!"
}

usage() {
  cat <<EOF
Usage: $(basename "$0") [OPTION]

Distrobox containers for various Linux distributions.

Options:
  create    # Create all Distrobox containers (default if no option)
  delete    # Delete all Distrobox containers
  start     # Start all Distrobox containers
  stop      # Stop all Distrobox containers
  restart   # Restart all Distrobox containers
  --help    # Display this help message

Examples:
  $(basename "$0")           # Create containers or attach if exists
  $(basename "$0") create    # Force create a new set of containers
  $(basename "$0") delete    # Delete all containers
  $(basename "$0") start     # Start all containers
  $(basename "$0") stop      # Stop all containers
  $(basename "$0") restart   # Restart all containers
EOF
}

main() {
  check_prerequisites

  if [[ "$1" == "delete" ]]; then
    delete_all
  elif [[ "$1" == "start" ]]; then
    start_all
  elif [[ "$1" == "stop" ]]; then
    stop_all
  elif [[ "$1" == "restart" ]]; then
    restart_all
  elif [[ "$1" == "--help" || "$1" == "help" || "$1" == "help" ]]; then
    usage
  elif [[ $# -eq 0 ]] || [[ "$1" == "create" ]]; then
    create_all
  else
    fail "Invalid option: $1"
    usage
    exit 1
  fi
}

main "$@"
