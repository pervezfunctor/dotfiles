#!/usr/bin/env bash

macos_settings_install() {
    defaults write -g NSWindowShouldDragOnGesture -bool true
    defaults write com.apple.finder AppleShowAllFiles -bool true
}

amethyst_confstall() {
    slog "amethyst config"
    stowdf amethyst
    slog "amethyst config done!"

}

aerospace_confstall() {
    slog "aerospace config"
    stowgf aerospace
}

macos_confstall() {
    stow -d "$DOT_DIR" -t "$HOME" --dotfiles -R aerospace
    stow -d "$DOT_DIR" -t "$HOME" --dotfiles -R amethyst
}

vscode_binstall() {
    bi visual-studio-code
}

terminal_binstall() {
    bic ghostty
}

ui_install() {
    bic nikitabobko/tap/aerospace
}

apps_install() {
    bi deluge
    bic telegram zoom google-chrome microsoft-remote-desktop
}

core_install() {
    softwareupdate --install-rosetta --agree-to-license
    brew_install
    bi mas coreutils bash curl wget trash tree unzip coreutils stow \
        nmap gawk
}

essential_install() {
    slog "Installing Essential packages"

    bis p7zip unar zip pkgx zstd newt

    slog "Essential packages installation done!"
}

cli-slim_install() {
    bis zsh starship ripgrep gh bat jq fzf zoxide eza \
        reattach-to-user-namespace zsh-syntax-highlighting zsh-autosuggestions
}

cli_install() {
    bis tmux pkg-config urlview htop starship shellcheck shfmt ripgrep neovim \
        luarocks tealdeer lsd fd-find git-delta just gum

    brew link luarocks
}

jetbrains-mono_install() {
    bic font-jetbrains-mono-nerd-font
}

nerd-fonts_install() {
    jetbrains-mono_install
    bic font-monaspace-nerd-font
    bic font-caskaydia-mono-nerd-font
}

fonts_install() {
    nerd-fonts_install
}

cpp_install() {
    slog "Installing C++"

    bi cmake boost catch2 ccache cppcheck pre-commit

    slog "C++ installation done!"
}

podman_install() {
    slog "Installing Container tools"

    bi podman
    bic podman-desktop
    podman machine init
    podman machine start
    dir_exists /Applications/Docker.app || bic docker

    slog "Container tools installation done!"
}

vm_install() {
    slog "Installing virtualization packages"

    bi orbstack colima jq

    slog "Virtualization packages installation done!"
}

pyenv_mac_install() {
    slog "Installing pyenv"
    bi pyenv pyenv-virtualenv
}

emacs_binstall() {
    dir_exists /Applications/Emacs.app && return 0
    dir_exists /usr/local/opt/emacs-mac && return 0

    slog "Installing emacs"

    bic emacs-mac

    slog "emacs installation done!"
}

docker_install() {
    has_cmd docker && return 0
    dir_exists /Applications/Docker.app && return 0

    slog "Installing docker"

    if [ -f ~/Downloads/Docker.dmg ]; then
        warn "Docker.dmg already exists, skipping download"
    else
        curl -sSL https://desktop.docker.com/mac/main/amd64/Docker.dmg -o ~/Downloads/Docker.dmg
    fi

    if [ -d /Volumes/Docker ]; then
        warn "Docker.dmg already mounted, unmounting"
        sudo hdiutil detach /Volumes/Docker
    fi
    sudo hdiutil attach ~/Downloads/Docker.dmg
    sudo /Volumes/Docker/Docker.app/Contents/MacOS/install
    sudo hdiutil detach /Volumes/Docker

    slog "docker installation done!"
}
