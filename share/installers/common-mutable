#! /usr/bin/env bash

shell-slim_groupstall() {
    if has_cmd cli-slim_install; then
        cli-slim_install
    else
        warn "cli-slim_install not available, skipping cli installation"
    fi
    shell-slim_install
}

shell_groupstall() {
    has_cmd cli_install && cli_install
    shell_install
}

groupstall() {
    "$1"_groupstall
}

mainstall() {
    "$1"_mainstall
}

base-group_check() {
    cmd_check curl wget git trash tree tar unzip
    dir_check "$DOT_DIR"
    bash_config_check
}

base_main_install() {
    if has_cmd core_install; then
        core_install
    else
        warn "core_install not available, skipping core installation"
    fi

    dotfiles_install
}

base_config_install() {
    has_cmd bash && bash_confstall
    git_confstall
}

base_mainstall() {
    base_main_install
    base_config_install
    base-group_check
}

min-group_check() {
    base-group_check
    cmd_check micro zip unar gcc make
}

min_main_install() {
    base_main_install
    if has_cmd essential_install; then
        essential_install
    else
        warn "essential_install not available, skipping essential installation"
    fi
}

min_config_install() {
    base_config_install
}

min_mainstall() {
    min_main_install
    min_config_install
    min-group_check
}

shell-slim-group_check() {
    min-group_check
    cmd_check trash rg gum starship zoxide bat eza gh fzf
    cmd_check carapace shellcheck delta
}

terminal_groupstall() {
    is_desktop || return 0

    jetbrains-mono_install
    terminal_bin_install
}

shell-slim_groupstall() {
    shell-slim_install
    terminal_groupstall
}

shell_groupstall() {
    shell_install
    terminal_groupstall
}

shell-slim_main_install() {
    min_main_install
}

shell-slim_config_install() {
    min_config_install
    zsh_confstall
    tmux_confstall
}

shell-slim_mainstall() {
    shell-slim_main_install
    shell-slim_config_install
    shell-slim-group_check
}

nix_mainstall() {
    min_mainstall
    has_cmd si && si zsh git

    nix_install
    new-hms
    shell_confstall
}

shell-group_check() {
    shell-slim-group_check
    cmd_check gh nvim zsh tmux lazygit sd bat brew htop btm atuin gawk
    cmd_check shellcheck shfmt ug tldr fd direnv jq yq
    # cmd_check cheat choose curlie direnv doggo dotenv procs
    # cmd_check duf dust gdu hyperfine just
}

shell_main_install() {
    min_main_install
    shell_groupstall
}

shell_config_install() {
    shell-slim_config_install
    has_cmd nvim && nvim_confstall astro
    has_cmd yazi && yazi_confstall
}

shell_mainstall() {
    shell_main_install
    shell_config_install
    shell-group_check
}

docker_groupstall() {
    docker_bin_install
    docker_confstall
    portainer_install
}

vbox-dev_mainstall() {
    docker_install
    shell_mainstall
    npm_install
}

vm_mainstall() {
    min_mainstall
    if has_cmd vm_install; then
        vm_install
    else
        warn "vm_install not available, skipping vm installation"
    fi
}

work_mainstall() {
    shell-slim_mainstall
    vscode_groupstall
    docker_install
}
