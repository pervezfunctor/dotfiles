#! /usr/bin/env bash

base_config_install() {
    dotfiles_install
    bash_confstall
}

min_config_install() {
    base_config_install
}

shell-slim_config_install() {
    min_config_install
    git_confstall
    zsh_confstall
}

shell_config_install() {
    shell-slim_config_install
    tmux_confstall
    nvim_confstall astro
    yazi_confstall
}

groupstall() {
    "$1"_groupstall
}

mainstall() {
    "$1"_mainstall
}

base_binstall() {
    if has_cmd core_install; then
        core_install
    else
        warn "core_install not available, skipping core installation"
    fi
}

bash_config_check() {
    bash_config_exists || warn "bash config is not setup correctly"
}

base_check() {
    cmd_check curl wget git trash stow tree tar unzip
    dir_check "$DOT_DIR"
    bash_config_check
}

base_mainstall() {
    base_binstall
    base_config_install
    base_check
}

min_binstall() {
    base_binstall
    if has_cmd essential_install; then
        essential_install
    else
        warn "essential_install not available, skipping essential installation"
    fi
}

shell-slim_binstall() {
    if has_cmd cli-slim_install; then
        cli-slim_install
    else
        warn "cli-slim_install not available, skipping cli installation"
    fi
    shell-slim_install
}

shell_binstall() {
    if has_cmd cli_install; then
        cli_install
    else
        warn "cli_install not available, skipping cli installation"
    fi
    shell_install
    terminal_install
}

shell-slim_groupstall() {
    shell-slim_binstall
    shell-slim_config_install
}

terminal_config_install() {
    alacritty_confstall
    kitty_confstall
    ghostty_confstall
    wezterm_confstall
}

terminal_install() {
    jetbrains-mono_install

    has_cmd ghostty && return 1
    has_cmd kitty && return 1
    has_cmd alacritty && return 1
    has_cmd wezterm && return 1

    if has_cmd flatpak && flatpak list | grep -q wezterm; then
        return 1
    fi

    terminal_binstall
}

terminal_groupstall() {
    is_desktop || return 0
    terminal_install
    terminal_config_install
}

shell_groupstall() {
    shell_binstall
    terminal_groupstall
    shell_config_install
}

nix_groupstall() {
    nix_install
    hms
    # shell_config_install
}

nix_check() {
    min_check
    cmd_check home-manager nix devbox
}

nix_mainstall() {
    min_binstall
    has_cmd si && si zsh
    nix_groupstall
    nix_check
}

docker_groupstall() {
    docker_install
    docker_confstall
    portainer_install
}

work_groupstall() {
    shell-slim_groupstall
    vscode_groupstall
    docker_groupstall
}
vm_groupstall() {
    if has_cmd vm_install; then
        vm_install
    else
        warn "vm_install not available, skipping vm installation"
        return 1
    fi

    cockpit_install
    libvirt_confstall
}

min_check() {
    base_check
    cmd_check micro zip gcc make whiptail
}

min_mainstall() {
    min_binstall
    min_config_install
    min_check
}

shell-slim_check() {
    min_check
    cmd_check zsh rg starship zoxide eza gh fzf
}

shell-slim_mainstall() {
    min_mainstall
    shell-slim_binstall

    shell-slim_config_install
    shell-slim_check
}

shell_check() {
    shell-slim_check
    cmd_check tmux nvim lazygit sd bat brew htop atuin gawk carapace direnv \
        shellcheck shfmt ug tldr fd direnv jq yq gum bat delta just dialog \
        btm yazi
}

shell_mainstall() {
    min_mainstall
    shell_binstall
    shell_config_install
    terminal_config_install
    shell_check
}

vm_check() {
    min_check
    cmd_check virt-install virsh jq virt-cat qemu-img wget xorriso
    is_desktop && cmd_check virt-viewer virt-manager
}

vm_mainstall() {
    min_mainstall
    vm_groupstall
    vm_check
}

work_check() {
    shell-slim_check
    cmd_check code docker portainer
}

work_mainstall() {
    min_binstall
    work_groupstall
    work_check
}
