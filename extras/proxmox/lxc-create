#!/usr/bin/env bash

set -euo pipefail

# shellcheck disable=SC1091
source "$(dirname "$0")/utils"

VMID=110 # Unique container ID
HOSTNAME=""
PASSWORD=""
TEMPLATE_STORAGE="local"   # Storage name for templates (e.g., 'local')
ROOTFS_STORAGE="local-lvm" # Storage for rootfs (e.g., 'local-lvm')
DISK_SIZE="8G"
MEMORY="2048"
CPUS="2"
NET_BRIDGE="vmbr0"
SCRIPT_TO_RUN=""
IP="dhcp"
UNPRIVILEGED=1

parse_args() {
  while [[ $# -gt 0 ]]; do
    case $1 in
    -i | --vm-id)
      VMID="$2"
      shift
      ;;
    -n | --hostname)
      HOSTNAME="$2"
      shift
      ;;
    -p | --password)
      PASSWORD="$2"
      shift
      ;;
    -t | --template-storage)
      TEMPLATE_STORAGE="$2"
      shift
      ;;
    -r | --rootfs-storage)
      ROOTFS_STORAGE="$2"
      shift
      ;;
    -d | --disk-size)
      DISK_SIZE="$2"
      shift
      ;;
    -m | --memory)
      MEMORY="$2"
      shift
      ;;
    -c | --cpus)
      CPUS="$2"
      shift
      ;;
    -b | --net-bridge)
      NET_BRIDGE="$2"
      shift
      ;;
    -s | --script)
      SCRIPT_TO_RUN="$2"
      shift
      ;;
    -u | --unprivileged)
      UNPRIVILEGED="$2"
      shift
      ;;
    -a | --ip)
      IP="$2"
      shift
      ;;
    -h | --help)
      echo "Usage: $0 [options]"
      echo "Options:"
      echo "  -i, --vm-id <ID>             Unique container ID"
      echo "  -n, --hostname <NAME>        Container hostname"
      echo "  -p, --password <PASS>        Root password"
      echo "  -t, --template-storage <NAME>  Storage name for templates (e.g., 'local')"
      echo "  -r, --rootfs-storage <NAME>  Storage for rootfs (e.g., 'local-lvm')"
      echo "  -d, --disk-size <SIZE>       Disk size (e.g., '8G')"
      echo "  -m, --memory <MB>            Memory in MB (e.g., '1024')"
      echo "  -c, --cpus <NUM>             Number of CPUs (e.g., '2')"
      echo "  -b, --net-bridge <NAME>      Network bridge (e.g., 'vmbr0')"
      echo "  -s, --script <PATH>          Path to the script on the Proxmox host"
      echo "  -u, --unprivileged <BOOL>    Unprivileged container (default: true)"
      echo "  -a, --ip <IP>                IP address (default: dhcp)"
      echo "  -h, --help                   Display this help message"
      exit 1
      ;;
    *)
      echo "Unknown parameter: $1"
      exit 1
      ;;
    esac
    shift
  done
}

main() {
  parse_args "$@"
  pveam update

  TEMPLATE=$(read_template)
  if [[ -z "$HOSTNAME" ]]; then
    HOSTNAME=$(basename "$TEMPLATE" | sed -E 's/\.tar\..*//')
  fi

  if [[ -z "$PASSWORD" ]]; then
    read -rp "Enter root password: " PASSWORD
  fi

  if ! pveam list "$TEMPLATE_STORAGE" | grep -q "$TEMPLATE"; then
    echo "Downloading Ubuntu LXC template..."
    pveam download "$TEMPLATE_STORAGE" "$TEMPLATE"
  fi

  pct create "$VMID" "/var/lib/vz/template/cache/$TEMPLATE" \
    --hostname "$HOSTNAME" \
    --password "$PASSWORD" \
    --storage "$ROOTFS_STORAGE" \
    --rootfs "${ROOTFS_STORAGE}:${DISK_SIZE}" \
    --memory "$MEMORY" \
    --cores "$CPUS" \
    --net0 name=eth0,bridge="$NET_BRIDGE",ip="$IP" \
    --unprivileged "$UNPRIVILEGED" \
    --start 1

  # sleep 5
  # pct push $VMID $SCRIPT_TO_RUN /root/$(basename $SCRIPT_TO_RUN) -perms 755
  # pct exec $VMID -- bash /root/$(basename $SCRIPT_TO_RUN)
  # echo "Script execution inside LXC container complete."
}

main "$@"
