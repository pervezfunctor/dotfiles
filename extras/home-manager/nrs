#! /usr/bin/env bash

export DOT_DIR=${DOT_DIR:-$HOME/.ilm}

# shellcheck disable=SC1091
source "$DOT_DIR/share/utils"

main() {
  if [ -z "$NIX_CONFIG_DIR" ]; then
    if dir_exists "$DOT_DIR/nixos-config"; then
      export NIX_CONFIG_DIR="$DOT_DIR/nixos-config"
    elif dir_exists "$DOT_DIR/extras/home-manager"; then
      export NIX_CONFIG_DIR="$DOT_DIR/extras/home-manager"
    else
      die "No configuration directory found! Exiting..."
    fi
  fi

  file_exists "${NIX_CONFIG_DIR}/darwin-vars.nix" || {
    warn "darwin-vars.nix not found! Creating..."
    nix-vars-create "$NIX_CONFIG_DIR/darwin-vars.nix"
    file_exists "${NIX_CONFIG_DIR}/darwin-vars.nix" || die "Failed to create darwin-vars.nix! Exiting..."
  }

  if is_mac; then
    NIX_PROFILE=${1:"${NIX_CONFIG_DIR}#$(hostname)"}
    sudo darwin-rebuild switch --flake "$NIX_PROFILE"
    return $?
  fi

  if is_wsl; then
    NIX_PROFILE=${1:"${NIX_CONFIG_DIR}#wsl"}
    sudo nixos-rebuild switch --flake "$NIX_PROFILE"
    return $?
  fi

  if is_nixos; then
    file_exists "${NIX_CONFIG_DIR}/hardware-configuration.nix" || {
      warn "hardware-configuration.nix not found! Creating..."
      cp /etc/nixos/hardware-configuration.nix "$NIX_CONFIG_DIR/" || die "Failed to copy hardware-configuration.nix!"
    }

    NIX_PROFILE=${1:"${NIX_CONFIG_DIR}#${USER}"}
    sudo nixos-rebuild switch --flake "$NIX_PROFILE"
    return $?
  fi

  if is_linux; then
    NIX_PROFILE=${1:"${NIX_CONFIG_DIR}#${USER}"}
    nix run home-manager -- switch --flake "$NIX_PROFILE" --impure -b bak
    return $?
  fi

  die "Unsupported OS. Exiting..."
}

main "$@"
