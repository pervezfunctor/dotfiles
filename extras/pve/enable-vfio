#!/bin/bash
set -euo pipefail

PCI_IDS=(
  "10de:2489" # nvidia rtx 3060 ti
  10de:228b   # nvidia audio
)

VFIO_CONF="/etc/modprobe.d/vfio.conf"
MODULES_FILE="/etc/modules"
INITRD_HOOK="/etc/initramfs-tools/modules"
TIMESTAMP="$(date +%Y%m%d_%H%M%S)"
VFIO_BACKUP="/etc/modprobe.d/vfio.conf.bak.$TIMESTAMP"

read -rp "🚨 This may affect boot. Continue? [y/N] " confirm
[[ "$confirm" =~ ^[Yy]$ ]] || {
  echo "❌ Aborted."
  exit 1
}

echo "🧩 Ensuring VFIO modules load on boot..."

ensure_module() {
  local mod="$1" file="$2"
  grep -q "^\s*${mod}\b" "$file" 2>/dev/null || echo "$mod" >>"$file"
}

for mod in vfio vfio_pci vfio_iommu_type1 vfio_virqfd; do
  ensure_module "$mod" "$MODULES_FILE"
  ensure_module "$mod" "$INITRD_HOOK"
done

echo "🎯 Binding device IDs to vfio-pci..."

if grep -q '^options vfio-pci ids=' "$VFIO_CONF" 2>/dev/null; then
  echo "⚠️ Existing vfio-pci binding found in $VFIO_CONF. Backing up..."
  cp "$VFIO_CONF" "$VFIO_BACKUP"
fi

{
  echo "options vfio-pci ids=$(
    IFS=,
    echo "${PCI_IDS[*]}"
  )"
} >"$VFIO_CONF"

echo "🔁 Regenerating initramfs..."
update-initramfs -u -k all

echo "🔍 Current VFIO-pci bind list:"
lspci -nnk | grep -A2 'Kernel driver in use'

echo "✅ VFIO enabled. Reboot to apply changes."
echo "ℹ️ Reminder: Ensure GRUB has 'intel_iommu=on iommu=pt' (or amd_iommu)."
